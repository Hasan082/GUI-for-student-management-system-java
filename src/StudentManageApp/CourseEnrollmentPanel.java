
package StudentManageApp;


import javax.swing.*;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;


/**
 *
 * @author hasan
 */
public class CourseEnrollmentPanel extends javax.swing.JFrame {

    private final DefaultListModel<String> studentListModel;
    public static Map<String, ArrayList<String>> courseEnrollments = new HashMap<>();
    
    public CourseEnrollmentPanel() {
        studentListModel = new DefaultListModel<>();
        initComponents();
        setTitle("Course Enrollment Panel");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        
        //Populate Course dropdown list method
        populateCourseDropdown();

        //Populist student list method
        populateStudentList();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CourseManagePage = new javax.swing.JPanel();
        Backbtn = new javax.swing.JButton();
        CourseTitle = new javax.swing.JLabel();
        courseDropdown = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentList = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        enrollBtn = new javax.swing.JButton();
        newCorseName = new javax.swing.JTextField();
        NewCourseBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        enrolledList = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CourseManagePage.setForeground(new java.awt.Color(255, 255, 255));

        Backbtn.setText("Back");
        Backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackbtnActionPerformed(evt);
            }
        });

        CourseTitle.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        CourseTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CourseTitle.setText("Course Enrollment Panel");
        CourseTitle.setAlignmentX(0.5F);

        courseDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Choose Course:");

        studentList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(studentList);

        jLabel2.setText("Students:");

        enrollBtn.setText("Enroll");
        enrollBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enrollBtnActionPerformed(evt);
            }
        });

        NewCourseBtn.setText("Add Course");
        NewCourseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewCourseBtnActionPerformed(evt);
            }
        });

        jLabel3.setText("Add New Course:");

        enrolledList.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        enrolledList.setText("View Enrolled List");
        enrolledList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enrolledListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CourseManagePageLayout = new javax.swing.GroupLayout(CourseManagePage);
        CourseManagePage.setLayout(CourseManagePageLayout);
        CourseManagePageLayout.setHorizontalGroup(
            CourseManagePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CourseManagePageLayout.createSequentialGroup()
                .addComponent(jSeparator1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CourseManagePageLayout.createSequentialGroup()
                .addGroup(CourseManagePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(CourseManagePageLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(enrollBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CourseManagePageLayout.createSequentialGroup()
                        .addGroup(CourseManagePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CourseManagePageLayout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(CourseManagePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(newCorseName, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CourseManagePageLayout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(NewCourseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 259, Short.MAX_VALUE)
                        .addGroup(CourseManagePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(CourseManagePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(courseDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(87, 87, 87))
            .addGroup(CourseManagePageLayout.createSequentialGroup()
                .addGroup(CourseManagePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CourseManagePageLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(Backbtn)
                        .addGap(203, 203, 203)
                        .addComponent(CourseTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CourseManagePageLayout.createSequentialGroup()
                        .addGap(349, 349, 349)
                        .addComponent(enrolledList, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CourseManagePageLayout.setVerticalGroup(
            CourseManagePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CourseManagePageLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(CourseManagePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Backbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CourseTitle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(CourseManagePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CourseManagePageLayout.createSequentialGroup()
                        .addGroup(CourseManagePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(courseDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(41, 41, 41)
                        .addGroup(CourseManagePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addComponent(enrollBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(enrolledList, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))
                    .addGroup(CourseManagePageLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(39, 39, 39)
                        .addComponent(newCorseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(NewCourseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(319, 319, 319))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CourseManagePage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CourseManagePage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //Back to main panel
    private void BackbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackbtnActionPerformed
        MainPanel mp = new MainPanel();
        mp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackbtnActionPerformed

    private void enrollBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enrollBtnActionPerformed
        enrollStudent();
        
    }//GEN-LAST:event_enrollBtnActionPerformed
    //Add new corse
    private void NewCourseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewCourseBtnActionPerformed
        String newcorsename = newCorseName.getText();
        courseDropdown.addItem(newcorsename);
        newCorseName.setText("");
        JOptionPane.showMessageDialog(this, "New Course added Successfully");
    }//GEN-LAST:event_NewCourseBtnActionPerformed

    private void enrolledListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enrolledListActionPerformed
         EnrolledListDisplay eld = new EnrolledListDisplay();
         eld.setVisible(true);
         this.dispose();
    }//GEN-LAST:event_enrolledListActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new CourseEnrollmentPanel().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Backbtn;
    private javax.swing.JPanel CourseManagePage;
    private javax.swing.JLabel CourseTitle;
    private javax.swing.JButton NewCourseBtn;
    private javax.swing.JComboBox<String> courseDropdown;
    private javax.swing.JButton enrollBtn;
    private javax.swing.JButton enrolledList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField newCorseName;
    private javax.swing.JList<String> studentList;
    // End of variables declaration//GEN-END:variables

    
    
   //Method for enrolled student with course
    private void enrollStudent() {
        String course = (String) courseDropdown.getSelectedItem();
        String student = studentList.getSelectedValue();

        if (student != null && course != null) {
            String studentId = student.split(":")[0]; // Extract the student ID
            ArrayList<String> enrolledCourses = courseEnrollments.getOrDefault(studentId, new ArrayList<>());
            if (!enrolledCourses.contains(course)) {
                enrolledCourses.add(course);
            }
            courseEnrollments.put(studentId, enrolledCourses);
            JOptionPane.showMessageDialog(this, "Student enrolled successfully!");
            studentList.clearSelection();
        } else {
            JOptionPane.showMessageDialog(this, "Please select both a student and a course.");
        }
    }

    //Method for get student list
    private void populateStudentList() {
//        DefaultListModel<String> studentListModel = new DefaultListModel<>();
        for (Map.Entry<String, String> entry : StudentManagementPanel.studentMap.entrySet()) {
            String studentId = entry.getKey();
            String studentName = entry.getValue();
            studentListModel.addElement(studentId + ": " + studentName);
        }
        studentList.setModel(studentListModel);
    }

    
    //Pre populate some courses
    private List<String> getCourses() {
        List<String> courseNames = new ArrayList<>();
        courseNames.add("Mathematics 101");
        courseNames.add("Physics 101");
        courseNames.add("Biology 101");
        courseNames.add("Bscs 101");
        return courseNames;
    }
    
    //Method for course setup
    private void populateCourseDropdown(){
        List<String> courseNames = getCourses();
        courseDropdown.removeAllItems();
        // Populate the course dropdown with course names
        for (String courseName : courseNames) {
            courseDropdown.addItem(courseName);
        }
    }
    
    
    
}
